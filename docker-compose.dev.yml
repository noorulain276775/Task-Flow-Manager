services:
  # Backend API (Development)
  backend-dev:
    build:
      context: ./backend
      target: development
    ports:
      - "3000:3000"
    env_file:
      - ./backend/.env
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=taskmanager
      - DB_PASSWORD=taskmanager123
      - DB_NAME=task_manager_dev
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=dev-super-secret-jwt-key-change-in-production
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    networks:
      - task-manager-network
    command: npm run dev

  # PostgreSQL Database (Development)
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=task_manager_dev
      - POSTGRES_USER=taskmanager
      - POSTGRES_PASSWORD=taskmanager123
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./backend/migrations:/docker-entrypoint-initdb.d
    restart: unless-stopped
    networks:
      - task-manager-network

  # Redis Cache (Development)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    restart: unless-stopped
    networks:
      - task-manager-network

  # pgAdmin (Development)
  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@taskmanager.com
      - PGADMIN_DEFAULT_PASSWORD=admin123
    ports:
      - "5050:80"
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - task-manager-network

volumes:
  postgres_dev_data:
  redis_dev_data:

networks:
  task-manager-network:
    driver: bridge
